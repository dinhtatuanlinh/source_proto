// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: rpc_check_admin_existing.proto

package source_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckAdminExistingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckAdminExistingRequest) Reset() {
	*x = CheckAdminExistingRequest{}
	mi := &file_rpc_check_admin_existing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAdminExistingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAdminExistingRequest) ProtoMessage() {}

func (x *CheckAdminExistingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_check_admin_existing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAdminExistingRequest.ProtoReflect.Descriptor instead.
func (*CheckAdminExistingRequest) Descriptor() ([]byte, []int) {
	return file_rpc_check_admin_existing_proto_rawDescGZIP(), []int{0}
}

type CheckAdminExistingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsExisting    bool                   `protobuf:"varint,1,opt,name=is_existing,json=isExisting,proto3" json:"is_existing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckAdminExistingResponse) Reset() {
	*x = CheckAdminExistingResponse{}
	mi := &file_rpc_check_admin_existing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckAdminExistingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAdminExistingResponse) ProtoMessage() {}

func (x *CheckAdminExistingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_check_admin_existing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAdminExistingResponse.ProtoReflect.Descriptor instead.
func (*CheckAdminExistingResponse) Descriptor() ([]byte, []int) {
	return file_rpc_check_admin_existing_proto_rawDescGZIP(), []int{1}
}

func (x *CheckAdminExistingResponse) GetIsExisting() bool {
	if x != nil {
		return x.IsExisting
	}
	return false
}

var File_rpc_check_admin_existing_proto protoreflect.FileDescriptor

const file_rpc_check_admin_existing_proto_rawDesc = "" +
	"\n" +
	"\x1erpc_check_admin_existing.proto\x12\x02pb\"\x1b\n" +
	"\x19CheckAdminExistingRequest\"=\n" +
	"\x1aCheckAdminExistingResponse\x12\x1f\n" +
	"\vis_existing\x18\x01 \x01(\bR\n" +
	"isExistingB(Z&github.com/dinhtatuanlinh/source_protob\x06proto3"

var (
	file_rpc_check_admin_existing_proto_rawDescOnce sync.Once
	file_rpc_check_admin_existing_proto_rawDescData []byte
)

func file_rpc_check_admin_existing_proto_rawDescGZIP() []byte {
	file_rpc_check_admin_existing_proto_rawDescOnce.Do(func() {
		file_rpc_check_admin_existing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_check_admin_existing_proto_rawDesc), len(file_rpc_check_admin_existing_proto_rawDesc)))
	})
	return file_rpc_check_admin_existing_proto_rawDescData
}

var file_rpc_check_admin_existing_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_check_admin_existing_proto_goTypes = []any{
	(*CheckAdminExistingRequest)(nil),  // 0: pb.CheckAdminExistingRequest
	(*CheckAdminExistingResponse)(nil), // 1: pb.CheckAdminExistingResponse
}
var file_rpc_check_admin_existing_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rpc_check_admin_existing_proto_init() }
func file_rpc_check_admin_existing_proto_init() {
	if File_rpc_check_admin_existing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_check_admin_existing_proto_rawDesc), len(file_rpc_check_admin_existing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_check_admin_existing_proto_goTypes,
		DependencyIndexes: file_rpc_check_admin_existing_proto_depIdxs,
		MessageInfos:      file_rpc_check_admin_existing_proto_msgTypes,
	}.Build()
	File_rpc_check_admin_existing_proto = out.File
	file_rpc_check_admin_existing_proto_goTypes = nil
	file_rpc_check_admin_existing_proto_depIdxs = nil
}
