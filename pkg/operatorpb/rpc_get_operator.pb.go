// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: rpc_get_operator.proto

package source_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetOperatorRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OperatorId       *int64                 `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`
	OperatorUsername *string                `protobuf:"bytes,2,opt,name=operator_username,json=operatorUsername,proto3,oneof" json:"operator_username,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetOperatorRequest) Reset() {
	*x = GetOperatorRequest{}
	mi := &file_rpc_get_operator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorRequest) ProtoMessage() {}

func (x *GetOperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_get_operator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorRequest) Descriptor() ([]byte, []int) {
	return file_rpc_get_operator_proto_rawDescGZIP(), []int{0}
}

func (x *GetOperatorRequest) GetOperatorId() int64 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *GetOperatorRequest) GetOperatorUsername() string {
	if x != nil && x.OperatorUsername != nil {
		return *x.OperatorUsername
	}
	return ""
}

type GetOperatorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operator      *Operator              `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperatorResponse) Reset() {
	*x = GetOperatorResponse{}
	mi := &file_rpc_get_operator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorResponse) ProtoMessage() {}

func (x *GetOperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_get_operator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorResponse) Descriptor() ([]byte, []int) {
	return file_rpc_get_operator_proto_rawDescGZIP(), []int{1}
}

func (x *GetOperatorResponse) GetOperator() *Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

var File_rpc_get_operator_proto protoreflect.FileDescriptor

const file_rpc_get_operator_proto_rawDesc = "" +
	"\n" +
	"\x16rpc_get_operator.proto\x12\x02pb\x1a\x0eoperator.proto\"\x92\x01\n" +
	"\x12GetOperatorRequest\x12$\n" +
	"\voperator_id\x18\x01 \x01(\x03H\x00R\n" +
	"operatorId\x88\x01\x01\x120\n" +
	"\x11operator_username\x18\x02 \x01(\tH\x01R\x10operatorUsername\x88\x01\x01B\x0e\n" +
	"\f_operator_idB\x14\n" +
	"\x12_operator_username\"?\n" +
	"\x13GetOperatorResponse\x12(\n" +
	"\boperator\x18\x01 \x01(\v2\f.pb.OperatorR\boperatorB(Z&github.com/dinhtatuanlinh/source_protob\x06proto3"

var (
	file_rpc_get_operator_proto_rawDescOnce sync.Once
	file_rpc_get_operator_proto_rawDescData []byte
)

func file_rpc_get_operator_proto_rawDescGZIP() []byte {
	file_rpc_get_operator_proto_rawDescOnce.Do(func() {
		file_rpc_get_operator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_get_operator_proto_rawDesc), len(file_rpc_get_operator_proto_rawDesc)))
	})
	return file_rpc_get_operator_proto_rawDescData
}

var file_rpc_get_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rpc_get_operator_proto_goTypes = []any{
	(*GetOperatorRequest)(nil),  // 0: pb.GetOperatorRequest
	(*GetOperatorResponse)(nil), // 1: pb.GetOperatorResponse
	(*Operator)(nil),            // 2: pb.Operator
}
var file_rpc_get_operator_proto_depIdxs = []int32{
	2, // 0: pb.GetOperatorResponse.operator:type_name -> pb.Operator
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_get_operator_proto_init() }
func file_rpc_get_operator_proto_init() {
	if File_rpc_get_operator_proto != nil {
		return
	}
	file_operator_proto_init()
	file_rpc_get_operator_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_get_operator_proto_rawDesc), len(file_rpc_get_operator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_get_operator_proto_goTypes,
		DependencyIndexes: file_rpc_get_operator_proto_depIdxs,
		MessageInfos:      file_rpc_get_operator_proto_msgTypes,
	}.Build()
	File_rpc_get_operator_proto = out.File
	file_rpc_get_operator_proto_goTypes = nil
	file_rpc_get_operator_proto_depIdxs = nil
}
